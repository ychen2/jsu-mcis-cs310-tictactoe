 
*** Test Cases ***
Win Diagonally as X
    Start New Game
    Mark Location       1   1
    Location Should Be  1   1   X
    Mark Location       0   1
    Location Should Be  0   1   O
    Mark Location       0   0
    Location Should Be  0   0   X
    Mark Location       0   2
    Location Should Be  0   2   O
    Mark Location       2   2
    Location Should Be  2   2   X
    Winner Should Be    X

Win Horizontally as O
    Start New Game
    Mark Location       1   1
    Location Should Be  1   1   X
    Mark Location       2   0
    Location Should Be  2   0   O
    Mark Location       0   0
    Location Should Be  0   0   X
    Mark Location       2   2
    Location Should Be  2   2   O
    Mark Location       0   2
    Location Should Be  0   2   X
    Mark Location       2   1
    Location Should Be  2   1   O
    Winner Should Be    O

Force a Tie
    Start New Game
    Mark Location       1   1
    Location Should Be  1   1   X
    Mark Location       0   0
    Location Should Be  0   0   O
    Mark Location       2   0
    Location Should Be  2   0   X
    Mark Location       0   2
    Location Should Be  0   2   O
    Mark Location       0   1
    Location Should Be  0   1   X
    Mark Location       2   1
    Location Should Be  2   1   O
    Mark Location       1   2
    Location Should Be  1   2   X
    Mark Location       1   0
    Location Should Be  1   0   O
    Mark Location       2   2
    Location Should Be  2   2   X
    Winner Should Be    TIE

Individual Project part2

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
public class TTT extends JFrame implements ActionListener{
    JPanel panel;
	JButton[] button;
	int count = 0;
	int sign = 0;
    public TTT(){
	    panel = new JPanel();
		panel.setLayout(new GridLayout(3,3));
		this.add(panel);
		button = new JButton[9];
		for(int i = 0; i <=8; i++){
		    button[i] = new JButton();
			panel.add(button[i]);
			button[i].setEnabled(true);
			button[i].addActionListener(this);
		}
		this.pack();
		this.setDefaultCloseOperation(EXIT_ON_CLOSE);
		this.setVisible(true);
	}
	public void actionPerformed(ActionEvent e){
	    count++;
		for(int i = 0; i <= 8; i++){
		    if(button[i] == e.getSource()){
			    if(sign%2 == 0){
			        button[i].setText("X");
					button[i].setEnabled(false);
				}
				else{
				    button[i].setText("O");
					button[i].setEnabled(false);
				}
			}
			
		}
		//checkWinner();
		if(count >= 9){
		    JOptionPane.showMessageDialog(null,"cat's Game!");
			for(int j = 0; j <= 8; j++){
			    button[j].setText("");
				button[j].setEnabled(true);
			}
			count = 0;
			sign = 0;
			return;
		}
		sign++;
	}
	//public boolean checkWinner(){
	
	//}
	public static void main(String[] args){
	    new TTT();
	}
}
